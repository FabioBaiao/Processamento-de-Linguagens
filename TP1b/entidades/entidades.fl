%option noyywrap
%x CIDADE PAIS DATA PESSOA
LETRA 		[a-zA-Z\-.]
PALAVRA 	{LETRA}+
ELEMENTO 	{PALAVRA}([ \n]{PALAVRA})*
NUM 		[0-9]+
%{
	#include <glib.h>
	#include <math.h>

	void setLimites(int);
	void inserir(GTree *, char *);

	int menor = 0;
	int maior = 0;

	GPtrArray *datas;
	GTree *cidades, *paises, *pessoas;
	int nCidades = 0, nPaises = 0, nPessoas = 0, nDatas = 0;
	char* enc = "<meta charset='UTF-8'/>";
	char* css = "<link rel='stylesheet' type='text/css' href='styles.css'>";
	FILE *enam, *tim, *cid, *pais, *pess, *dat, *anos;
%}

%%

<INITIAL>\<ENAMEX\ TYPE=\"CITY\"\> 		{BEGIN(CIDADE);}
<INITIAL>\<ENAMEX\ TYPE=\"COUNTRY\"\> 	{BEGIN(PAIS);}
<INITIAL>\<ENAMEX\ TYPE=\"PERSON\"\> 	{BEGIN(PESSOA);}
<INITIAL>\<TIMEX\ TYPE=\"DATE\"\>		{BEGIN(DATA);}

<CIDADE,PAIS,PESSOA>\<\/ENAMEX\>		{BEGIN(INITIAL);}
<DATA>\<\/TIMEX\> 						{BEGIN(INITIAL);}

<CIDADE>{ELEMENTO} 						{	char *chave = strdup(yytext);
											inserir(cidades, chave);}
<PAIS>{ELEMENTO} 						{	char *chave = strdup(yytext);
											inserir(paises, chave);}

<DATA>({NUM}[ \n])?{ELEMENTO}			{	/*7 de Junho*/ /*Junho*/
											char *v = strdup(yytext);
											g_ptr_array_add(datas, v);
											nDatas++;
											}
<DATA>{NUM}\/{NUM}\/{NUM}				{	/*7/6/1996*/
											char *v = strdup(yytext);
											g_ptr_array_add(datas, v);
											nDatas++;
											char sep[2] = "/";
											char *token = strtok(yytext, sep);
											token = strtok(NULL, sep);
											token = strtok(NULL, sep);
											v = strdup(token);
											int ano = atoi(v);
											setLimites(ano);}
<DATA>{NUM} 							{	/*1996*/
											char *v = strdup(yytext);
											g_ptr_array_add(datas, v);
											nDatas++;
											int ano = atoi(yytext);
											setLimites(ano);}

<PESSOA>{ELEMENTO} 						{	char *chave = strdup(yytext);
											inserir(pessoas, chave);}

<*>.|\n 								{}

%%

void setLimites(int ano){
	if (ano < menor || menor == 0) menor = ano;
	if (ano > maior || maior == 0) maior = ano;
}

void inserir(GTree *arvore, char *chave){
	int *valor = g_tree_lookup(arvore, chave);
	if (valor != NULL){
		(*valor)++;
	}
	else{
		valor = malloc(sizeof(int));
		*valor = 1;
	}
	g_tree_insert(arvore, chave, valor);
}

void beginTIMEX(FILE* f, char* act1, char* act2){
	fprintf(f, "<html>\n");
	fprintf(f, "\t<head>\n\t\t%s\n\t%s\n\t</head>\n", enc, css);
	fprintf(f, "\t<body>");
	fprintf(f, "\t\t<ul class='topmenu'>\n");
	fprintf(f, "\t\t\t<li><a href='enamex.html'> ENAMEX </a></li>\n");
	fprintf(f, "\t\t\t<li><a href='timex.html' class='active'> TIMEX </a></li>\n");
	fprintf(f, "\t\t</ul>\n");
	fprintf(f, "\t\t<div class='clearfix'>\n");
	fprintf(f, "\t\t\t<div class='column sidemenu'>\n");
	fprintf(f, "\t\t\t\t<ul>\n");
	fprintf(f, "\t\t\t\t\t<li><a href='anos.html' %s> Cronologia </a></li>\n", act1);
	fprintf(f, "\t\t\t\t\t<li><a href='datas.html' %s> Datas </a></li>\n", act2);
	fprintf(f, "\t\t\t\t</ul>\t\t\t</div>\n");
}

void beginENAMEX(FILE* f, char* act1, char* act2, char* act3){
	fprintf(f, "<html>\n");
	fprintf(f, "\t<head>\n\t\t%s\n\t%s\n\t</head>\n", enc, css);
	fprintf(f, "\t<body>");
	fprintf(f, "\t\t<ul class='topmenu'>\n");
	fprintf(f, "\t\t\t<li><a href='enamex.html' class='active'> ENAMEX </a></li>\n");
	fprintf(f, "\t\t\t<li><a href='timex.html'> TIMEX </a></li>\n");
	fprintf(f, "\t\t</ul>\n");
	fprintf(f, "\t\t<div class='clearfix'>\n");
	fprintf(f, "\t\t\t<div class='column sidemenu'>\n");
	fprintf(f, "\t\t\t\t<ul>\n");
	fprintf(f, "\t\t\t\t\t<li><a href='pessoas.html' %s> Pessoas </a></li>\n", act1);
	fprintf(f, "\t\t\t\t\t<li><a href='paises.html' %s> Países </a></li>\n", act2);
	fprintf(f, "\t\t\t\t\t<li><a href='cidades.html' %s> Cidades </a></li>\n", act3);
	fprintf(f, "\t\t\t\t</ul>\t\t\t</div>\n");
}

void footerHTML(FILE *f) {
	fprintf(f, "\t\t<div class='footer'>\n");
	fprintf(f, "\t\t\t<div class='leftside_footer'>\n");
	fprintf(f, "\t\t\t\t<img class='footer_img' src='image.png'/></a>\n");
	fprintf(f, "\t\t\t\t<div class='foot_label'>\n");
	fprintf(f, "\t\t\t\t\t<p style='color:#FF0'>Processador de</p>\n");
	fprintf(f, "\t\t\t\t\t<p style='color: #FF0'>E N A M E X</p>\n");
	fprintf(f, "\t\t\t\t</div>\n");
	fprintf(f, "\t\t\t</div>\n");
	fprintf(f, "\t\t\t<div class='authors'>\n");
	fprintf(f, "\t\t\t\t<p>Fábio Baião</p>\n");
	fprintf(f, "\t\t\t\t<p>João Coelho</p>\n");
	fprintf(f, "\t\t\t\t<p>Luís Fernandes</p>\n");
	fprintf(f, "\t\t\t</div>\n");
	fprintf(f, "\t\t</div>\n");
	fprintf(f, "\t</body>\n</html>");
}

gboolean printNodo(gpointer key, gpointer value, gpointer data) {
	fprintf(data, "\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n");
	fprintf(data, "\t\t\t\t\t\t\t<td>%s</td>\n", (char *) key);
	fprintf(data, "\t\t\t\t\t\t\t<td>%d</td>\n", *((int *) value));
	return FALSE;
}

void imprimeCidades(FILE *f, char* title){
	fprintf(f, "\t\t\t\t<div class='column content'>\n");
	fprintf(f, "\t\t\t\t\t<div class='header'>\n");
	fprintf(f, "\t\t\t\t\t\t<h4 style='color:#008CBA;'>%s</h4>", title);
	fprintf(f, "\t\t\t\t\t</div>\n");
	fprintf(f, "\t\t\t\t\t<table class='center'>\n");
	fprintf(f, "\t\t\t\t\t\t<tr>\n");
	fprintf(f, "\t\t\t\t\t\t\t<th>Cidade</th>\n");
	fprintf(f, "\t\t\t\t\t\t\t<th>Nº de ocorrências</th>\n");
	
	g_tree_foreach(cidades, (GTraverseFunc)printNodo, f);

	fprintf(f, "\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n");
	fprintf(f, "\t\t\t\t</div>\n\t\t\t</div>\n");
}

void imprimePaises(FILE *f, char* title){
	fprintf(f, "\t\t\t\t<div class='column content'>\n");
	fprintf(f, "\t\t\t\t\t<div class='header'>\n");
	fprintf(f, "\t\t\t\t\t\t<h4 style='color:#008CBA;'>%s</h4>", title);
	fprintf(f, "\t\t\t\t\t</div>\n");
	fprintf(f, "\t\t\t\t\t<table class='center'>\n");
	fprintf(f, "\t\t\t\t\t\t<tr>\n");
	fprintf(f, "\t\t\t\t\t\t\t<th>País</th>\n");
	fprintf(f, "\t\t\t\t\t\t\t<th>Nº de ocorrências</th>\n");
	
	g_tree_foreach(paises, (GTraverseFunc)printNodo, f);
	
	fprintf(f, "\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n");
	fprintf(f, "\t\t\t\t</div>\n\t\t\t</div>\n");
}

void imprimePessoas(FILE* f, char* title){
	fprintf(f, "\t\t\t\t<div class='column content'>\n");
	fprintf(f, "\t\t\t\t\t<div class='header'>\n");
	fprintf(f, "\t\t\t\t\t\t<h4 style='color:#008CBA;'>%s</h4>", title);
	fprintf(f, "\t\t\t\t\t</div>\n");
	fprintf(f, "\t\t\t\t\t<table class='center'>\n");
	fprintf(f, "\t\t\t\t\t\t<tr>\n");
	fprintf(f, "\t\t\t\t\t\t\t<th>Pessoa</th>\n");
	fprintf(f, "\t\t\t\t\t\t\t<th>Nº de ocorrências</th>\n");
	
	g_tree_foreach(pessoas, (GTraverseFunc)printNodo, f);

	fprintf(f, "\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n");
	fprintf(f, "\t\t\t\t</div>\n\t\t\t</div>\n");
}

void imprimeAnos(FILE *f, char* title) {
	fprintf(f, "\t\t\t\t<div class='column content'>\n");
	fprintf(f, "\t\t\t\t\t<div class='header'>\n");
	fprintf(f, "\t\t\t\t\t\t<h4 style='color:#008CBA;'>%s</h4>", title);
	fprintf(f, "\t\t\t\t\t</div>\n");
	fprintf(f, "\t\t\t\t\t<table style='width: 40%%' class='center'>\n");
	fprintf(f, "\t\t\t\t\t\t<tr>\n");
	fprintf(f, "\t\t\t\t\t\t\t<th style='width: 50%%;'>Ano menor</th>\n");
	fprintf(f, "\t\t\t\t\t\t\t<th style='width: 50%%;'>Ano mais atual</th>\n");
	fprintf(f, "\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n");
	fprintf(f, "\t\t\t\t\t\t\t<td>%d</td>\n", menor);
	fprintf(f, "\t\t\t\t\t\t\t<td>%d</td>\n", maior);
	fprintf(f, "\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n");
	fprintf(f, "\t\t\t\t</div>\n\t\t\t</div>\n");
}

void imprimeDatas(FILE *f, char* title) {
	fprintf(f, "\t\t\t\t<div class='column content'>\n");
	fprintf(f, "\t\t\t\t\t<div class='header'>\n");
	fprintf(f, "\t\t\t\t\t\t<h4 style='color:#008CBA;'>%s</h4>", title);
	fprintf(f, "\t\t\t\t\t</div>\n");
	fprintf(f, "\t\t\t\t\t<table class='center'>\n");
	fprintf(f, "\t\t\t\t\t\t<tr>\n");
	fprintf(f, "\t\t\t\t\t\t\t<th>Data</th>\n");
	int i;
	for(i = 0; i < nDatas; i++) {
		char *v = g_ptr_array_index(datas, i);
		fprintf(f, "\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n");
		fprintf(f, "\t\t\t\t\t\t\t<td>%s</td>\n", v);	
	}
	fprintf(f, "\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n");
	fprintf(f, "\t\t\t\t</div>\n\t\t\t</div>\n");
}

int main(int argc, char** argv){
	enam = fopen("layout/enamex.html", "w");
	tim = fopen("layout/timex.html", "w");
	cid = fopen("layout/cidades.html", "w");
	pais = fopen("layout/paises.html", "w");
	pess = fopen("layout/pessoas.html", "w");
	anos = fopen("layout/anos.html", "w");
	dat = fopen("layout/datas.html", "w");
	if (argc == 2)
		yyin = fopen(*(argv+1), "r");
	cidades = g_tree_new((GCompareFunc)strcmp);
	paises = g_tree_new((GCompareFunc)strcmp);
	pessoas = g_tree_new((GCompareFunc)strcmp);
	datas = g_ptr_array_new();
	yylex();
	beginENAMEX(enam,"","","");
	footerHTML(enam);
	fclose(enam);
	beginTIMEX(tim,"","");
	footerHTML(tim);
	fclose(tim);
	beginENAMEX(cid,"","","class='active'");
	imprimeCidades(cid, "Nomes próprios relativos a cidades que constam do ficheiro XML analisado");
	footerHTML(cid);
	fclose(cid);
	beginENAMEX(pais,"","class='active'","");
	imprimePaises(pais, "Nomes próprios relativos a países que constam do ficheiro XML analisado");
	footerHTML(pais);
	fclose(pais);
	beginENAMEX(pess, "class='active'","","");
	imprimePessoas(pess, "Nomes próprios relativos a pessoas que constam do ficheiro XML analisado");
	footerHTML(pess);
	fclose(pess);
	beginTIMEX(dat,"","class='active'");
	imprimeDatas(dat, "Datas mencionadas no ficheiro XML");
	footerHTML(dat);
	fclose(dat);
	beginTIMEX(anos, "class='active'","");
	imprimeAnos(anos, "Contexto cronológico do documento");
	footerHTML(anos);
	fclose(anos);
	system("firefox layout/enamex.html");
	return 0;
}